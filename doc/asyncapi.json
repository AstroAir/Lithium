{
  "asyncapi": "2.6.0",
  "info": {
    "title": "Lithium Server API",
    "version": "1.0.0",
    "description": "An open and light astrophotography terminal like lithium",
    "license": {
      "name": "GNU GENERAL PUBLIC LICENSE, Version 3",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    }
  },
  "servers": {
    "main": {
      "url": "http://127.0.0.1:8000",
      "protocol": "websocket",
      "description": "Main websocket server"
    }
  },
  "channels": {
    "GetDeviceList": {
      "publish": {
        "operationId": "GetDeviceList",
        "message": {
          "name": "GetDeviceList",
          "payload": {
            "type": "object",
            "properties": {
              "device_type": {
                "type": "string",
                "description": "Type of device to retrieve the list"
              }
            },
            "required": [
              "device_type"
            ]
          }
        }
      }
    },
    "AddDevice": {
      "publish": {
        "operationId": "AddDevice",
        "message": {
          "name": "AddDevice",
          "payload": {
            "type": "object",
            "properties": {
              "device_type": {
                "type": "string",
                "description": "Type of device to add"
              },
              "device_name": {
                "type": "string",
                "description": "Name of device to add"
              },
              "lib_name": {
                "type": "string",
                "description": "Name of library to load device"
              }
            },
            "required": [
              "device_name",
              "device_type"
            ]
          }
        }
      }
    },
    "AddDeviceLibrary": {
      "publish": {
        "operationId": "AddDeviceLibrary",
        "message": {
          "name": "AddDeviceLibrary",
          "payload": {
            "type": "object",
            "properties": {
              "lib_path": {
                "type": "string",
                "description": "Path of device library to add"
              },
              "lib_name": {
                "type": "string",
                "description": "Name of device library to add"
              }
            },
            "required": [
              "lib_name",
              "lib_path"
            ]
          }
        }
      }
    },
    "RemoveDevice": {
      "publish": {
        "operationId": "RemoveDevice",
        "message": {
          "name": "RemoveDevice",
          "payload": {
            "type": "object",
            "properties": {
              "device_type": {
                "type": "string",
                "description": "Type of device to remove"
              },
              "device_name": {
                "type": "string",
                "description": "Name of device to remove"
              }
            },
            "required": [
              "device_name",
              "device_type"
            ]
          }
        }
      }
    },
    "RemoveDevicesByName": {
      "publish": {
        "operationId": "RemoveDevicesByName",
        "message": {
          "name": "RemoveDevicesByName",
          "payload": {
            "type": "object",
            "properties": {
              "device_name": {
                "type": "string",
                "description": "Name of device to remove"
              }
            },
            "required": [
              "device_name"
            ]
          }
        }
      }
    },
    "RemoveDeviceLibrary": {
      "publish": {
        "operationId": "RemoveDeviceLibrary",
        "message": {
          "name": "RemoveDeviceLibrary",
          "payload": {
            "type": "object",
            "properties": {
              "lib_name": {
                "type": "string",
                "description": "Name of device library to remove"
              }
            },
            "required": [
              "lib_name"
            ]
          }
        }
      }
    },
    "RunDeviceTask": {
      "publish": {
        "operationId": "RunDeviceTask",
        "message": {
          "name": "RunDeviceTask",
          "payload": {
            "type": "object",
            "properties": {
              "device_name": {
                "type": "string"
              },
              "device_uuid": {
                "type": "string"
              },
              "device_type": {
                "type": "string"
              },
              "task_name": {
                "type": "string"
              }
            },
            "required": [
              "device_type",
              "task_name"
            ]
          }
        }
      }
    },
    "CreateProcess": {
      "publish": {
        "operationId": "CreateProcess",
        "message": {
          "name": "CreateProcess",
          "title": "Create a Process",
          "contentType" :"application/json",
          "summary":"Create a alone process to run system command (depend on platform)",
          "payload": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string"
              },
              "cmd_id": {
                "type": "string"
              }
            },
            "required": [
              "command",
              "cmd_id"
            ]
          }
        }
      }
    },
    "RunScript": {
      "publish": {
        "operationId": "RunScript",
        "message": {
          "name": "RunScript",
          "title": "Run a script",
          "contentType" :"application/json",
          "summary":"Create a alone process to run shell script (depend on platform)",
          "payload": {
            "type": "object",
            "properties": {
              "script_name": {
                "type": "string",
                "description": "Name of script to run"
              },
              "script_id": {
                "type": "string",
                "description": "ID of script to run , required in TerminateProcessByName"
              }
            },
            "required": [
              "script_name",
              "script_id"
            ]
          }
        }
      }
    },
    "TerminateProcessByName": {
      "publish": {
        "operationId": "TerminateProcessByName",
        "message": {
          "name": "TerminateProcessByName",
          "title": "Terminate an exists process",
          "contentType" :"application/json",
          "summary":"Terminate an existed process created by ProcessManager.Can not operate with other software",
          "payload": {
            "type": "object",
            "properties": {
              "process_name": {
                "type": "string",
                "description": "Name of process to terminate"
              }
            },
            "required": [
              "process_name"
            ]
          }
        }
      }
    },
    "GetRunningProcesses": {
      "publish": {
        "operationId": "GetRunningProcesses",
        "message": {
          "name": "GetRunningProcesses",
          "title": "Get current running processes",
          "contentType" :"application/json",
          "summary":"获取当前正在运行的所有进程的信息（只包含由ProcessManager创建的，不能获取系统进程，如有需要请调用其他的API）",
          "payload": {}
        }
      }
    },
    "GetProcessOutput": {
      "publish": {
        "operationId": "GetProcessOutput",
        "message": {
          "name": "GetProcessOutput",
          "payload": {
            "type": "object",
            "properties": {
              "process_name": {
                "type": "string",
                "description": "Name of process to get output"
              }
            },
            "required": [
              "process_name"
            ]
          }
        }
      }
    }
  }
}