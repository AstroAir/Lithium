export class Localizer{constructor(){this.language="en",this.dictionary=void 0}setup(supportedLanguages){let userLanguages;this.language="en",userLanguages="object"==typeof window.navigator.languages?window.navigator.languages:[navigator.language||navigator.userLanguage];for(let i=0;i<userLanguages.length;i++){const userLang=userLanguages[i].toLowerCase().replace("_","-").split("-");if("en"===userLang[0]&&(void 0===userLang[1]||"us"===userLang[1]))return;for(let j=0;j<supportedLanguages.length;j++){const supLang=supportedLanguages[j].toLowerCase().replace("_","-").split("-");if(userLang[0]===supLang[0]&&userLang[1]===supLang[1])return void(this.language=supportedLanguages[j])}for(let j=0;j<supportedLanguages.length;j++){const supLang=supportedLanguages[j].toLowerCase().replace("_","-").split("-");if(userLang[0]===supLang[0]&&void 0===supLang[1])return void(this.language=supportedLanguages[j])}}}get(id){return void 0!==this.dictionary&&this.dictionary[id]?this.dictionary[id]:id}translateDOM(){const self=this;function process(elem,enabled){function isAnyOf(searchElement,items){return-1!==items.indexOf(searchElement)}function translateAttribute(elem,attr){const str=self.get(elem.getAttribute(attr));elem.setAttribute(attr,str)}function translateTextNode(node){const str=self.get(node.data.trim());node.data=str}elem.hasAttribute("translate")&&(isAnyOf(elem.getAttribute("translate"),["","yes"])?enabled=!0:isAnyOf(elem.getAttribute("translate"),["no"])&&(enabled=!1)),enabled&&(elem.hasAttribute("abbr")&&"TH"===elem.tagName&&translateAttribute(elem,"abbr"),elem.hasAttribute("alt")&&isAnyOf(elem.tagName,["AREA","IMG","INPUT"])&&translateAttribute(elem,"alt"),elem.hasAttribute("download")&&isAnyOf(elem.tagName,["A","AREA"])&&translateAttribute(elem,"download"),elem.hasAttribute("label")&&isAnyOf(elem.tagName,["MENUITEM","MENU","OPTGROUP","OPTION","TRACK"])&&translateAttribute(elem,"label"),elem.hasAttribute("placeholder")&&isAnyOf(elem.tagName,["INPUT","TEXTAREA"])&&translateAttribute(elem,"placeholder"),elem.hasAttribute("title")&&translateAttribute(elem,"title"),elem.hasAttribute("value")&&"INPUT"===elem.tagName&&isAnyOf(elem.getAttribute("type"),["reset","button","submit"])&&translateAttribute(elem,"value"));for(let i=0;i<elem.childNodes.length;i++){const node=elem.childNodes[i];node.nodeType===node.ELEMENT_NODE?process(node,enabled):node.nodeType===node.TEXT_NODE&&enabled&&translateTextNode(node)}}process(document.body,!0)}}export const l10n=new Localizer;export default l10n.get.bind(l10n);