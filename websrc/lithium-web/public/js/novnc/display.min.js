import*as Log from"./util/logging.min.js";import Base64 from"./base64.min.js";import{toSigned32bit}from"./util/int.min.js";export default class Display{constructor(target){if(this._drawCtx=null,this._renderQ=[],this._flushing=!1,this._fbWidth=0,this._fbHeight=0,this._prevDrawStyle="",Log.Debug(">> Display.constructor"),this._target=target,!this._target)throw new Error("Target must be set");if("string"==typeof this._target)throw new Error("target must be a DOM element");if(!this._target.getContext)throw new Error("no getContext method");this._targetCtx=this._target.getContext("2d"),this._viewportLoc={x:0,y:0,w:this._target.width,h:this._target.height},this._backbuffer=document.createElement("canvas"),this._drawCtx=this._backbuffer.getContext("2d"),this._damageBounds={left:0,top:0,right:this._backbuffer.width,bottom:this._backbuffer.height},Log.Debug("User Agent: "+navigator.userAgent),Log.Debug("<< Display.constructor"),this._scale=1,this._clipViewport=!1,this.onflush=()=>{}}get scale(){return this._scale}set scale(scale){this._rescale(scale)}get clipViewport(){return this._clipViewport}set clipViewport(viewport){this._clipViewport=viewport;const vp=this._viewportLoc;this.viewportChangeSize(vp.w,vp.h),this.viewportChangePos(0,0)}get width(){return this._fbWidth}get height(){return this._fbHeight}viewportChangePos(deltaX,deltaY){const vp=this._viewportLoc;deltaX=Math.floor(deltaX),deltaY=Math.floor(deltaY),this._clipViewport||(deltaX=-vp.w,deltaY=-vp.h);const vx2=vp.x+vp.w-1,vy2=vp.y+vp.h-1;deltaX<0&&vp.x+deltaX<0&&(deltaX=-vp.x),vx2+deltaX>=this._fbWidth&&(deltaX-=vx2+deltaX-this._fbWidth+1),vp.y+deltaY<0&&(deltaY=-vp.y),vy2+deltaY>=this._fbHeight&&(deltaY-=vy2+deltaY-this._fbHeight+1),0===deltaX&&0===deltaY||(Log.Debug("viewportChange deltaX: "+deltaX+", deltaY: "+deltaY),vp.x+=deltaX,vp.y+=deltaY,this._damage(vp.x,vp.y,vp.w,vp.h),this.flip())}viewportChangeSize(width,height){this._clipViewport&&void 0!==width&&void 0!==height||(Log.Debug("Setting viewport to full display region"),width=this._fbWidth,height=this._fbHeight),width=Math.floor(width),height=Math.floor(height),width>this._fbWidth&&(width=this._fbWidth),height>this._fbHeight&&(height=this._fbHeight);const vp=this._viewportLoc;if(vp.w!==width||vp.h!==height){vp.w=width,vp.h=height;const canvas=this._target;canvas.width=width,canvas.height=height,this.viewportChangePos(0,0),this._damage(vp.x,vp.y,vp.w,vp.h),this.flip(),this._rescale(this._scale)}}absX(x){return 0===this._scale?0:toSigned32bit(x/this._scale+this._viewportLoc.x)}absY(y){return 0===this._scale?0:toSigned32bit(y/this._scale+this._viewportLoc.y)}resize(width,height){this._prevDrawStyle="",this._fbWidth=width,this._fbHeight=height;const canvas=this._backbuffer;if(canvas.width!==width||canvas.height!==height){let saveImg=null;canvas.width>0&&canvas.height>0&&(saveImg=this._drawCtx.getImageData(0,0,canvas.width,canvas.height)),canvas.width!==width&&(canvas.width=width),canvas.height!==height&&(canvas.height=height),saveImg&&this._drawCtx.putImageData(saveImg,0,0)}const vp=this._viewportLoc;this.viewportChangeSize(vp.w,vp.h),this.viewportChangePos(0,0)}getImageData(){return this._drawCtx.getImageData(0,0,this.width,this.height)}toDataURL(type,encoderOptions){return this._backbuffer.toDataURL(type,encoderOptions)}toBlob(callback,type,quality){return this._backbuffer.toBlob(callback,type,quality)}_damage(x,y,w,h){x<this._damageBounds.left&&(this._damageBounds.left=x),y<this._damageBounds.top&&(this._damageBounds.top=y),x+w>this._damageBounds.right&&(this._damageBounds.right=x+w),y+h>this._damageBounds.bottom&&(this._damageBounds.bottom=y+h)}flip(fromQueue){if(0===this._renderQ.length||fromQueue){let x=this._damageBounds.left,y=this._damageBounds.top,w=this._damageBounds.right-x,h=this._damageBounds.bottom-y,vx=x-this._viewportLoc.x,vy=y-this._viewportLoc.y;vx<0&&(w+=vx,x-=vx,vx=0),vy<0&&(h+=vy,y-=vy,vy=0),vx+w>this._viewportLoc.w&&(w=this._viewportLoc.w-vx),vy+h>this._viewportLoc.h&&(h=this._viewportLoc.h-vy),w>0&&h>0&&this._targetCtx.drawImage(this._backbuffer,x,y,w,h,vx,vy,w,h),this._damageBounds.left=this._damageBounds.top=65535,this._damageBounds.right=this._damageBounds.bottom=0}else this._renderQPush({type:"flip"})}pending(){return this._renderQ.length>0}flush(){0===this._renderQ.length?this.onflush():this._flushing=!0}fillRect(x,y,width,height,color,fromQueue){0===this._renderQ.length||fromQueue?(this._setFillColor(color),this._drawCtx.fillRect(x,y,width,height),this._damage(x,y,width,height)):this._renderQPush({type:"fill",x:x,y:y,width:width,height:height,color:color})}copyImage(oldX,oldY,newX,newY,w,h,fromQueue){0===this._renderQ.length||fromQueue?(this._drawCtx.mozImageSmoothingEnabled=!1,this._drawCtx.webkitImageSmoothingEnabled=!1,this._drawCtx.msImageSmoothingEnabled=!1,this._drawCtx.imageSmoothingEnabled=!1,this._drawCtx.drawImage(this._backbuffer,oldX,oldY,w,h,newX,newY,w,h),this._damage(newX,newY,w,h)):this._renderQPush({type:"copy",oldX:oldX,oldY:oldY,x:newX,y:newY,width:w,height:h})}imageRect(x,y,width,height,mime,arr){if(0===width||0===height)return;const img=new Image;img.src="data: "+mime+";base64,"+Base64.encode(arr),this._renderQPush({type:"img",img:img,x:x,y:y,width:width,height:height})}blitImage(x,y,width,height,arr,offset,fromQueue){if(0===this._renderQ.length||fromQueue){let data=new Uint8ClampedArray(arr.buffer,arr.byteOffset+offset,width*height*4),img=new ImageData(data,width,height);this._drawCtx.putImageData(img,x,y),this._damage(x,y,width,height)}else{const newArr=new Uint8Array(width*height*4);newArr.set(new Uint8Array(arr.buffer,0,newArr.length)),this._renderQPush({type:"blit",data:newArr,x:x,y:y,width:width,height:height})}}drawImage(img,x,y){this._drawCtx.drawImage(img,x,y),this._damage(x,y,img.width,img.height)}autoscale(containerWidth,containerHeight){let scaleRatio;if(0===containerWidth||0===containerHeight)scaleRatio=0;else{const vp=this._viewportLoc,targetAspectRatio=containerWidth/containerHeight,fbAspectRatio=vp.w/vp.h;scaleRatio=fbAspectRatio>=targetAspectRatio?containerWidth/vp.w:containerHeight/vp.h}this._rescale(scaleRatio)}_rescale(factor){this._scale=factor;const vp=this._viewportLoc,width=factor*vp.w+"px",height=factor*vp.h+"px";this._target.style.width===width&&this._target.style.height===height||(this._target.style.width=width,this._target.style.height=height)}_setFillColor(color){const newStyle="rgb("+color[0]+","+color[1]+","+color[2]+")";newStyle!==this._prevDrawStyle&&(this._drawCtx.fillStyle=newStyle,this._prevDrawStyle=newStyle)}_renderQPush(action){this._renderQ.push(action),1===this._renderQ.length&&this._scanRenderQ()}_resumeRenderQ(){this.removeEventListener("load",this._noVNCDisplay._resumeRenderQ),this._noVNCDisplay._scanRenderQ()}_scanRenderQ(){let ready=!0;for(;ready&&this._renderQ.length>0;){const a=this._renderQ[0];switch(a.type){case"flip":this.flip(!0);break;case"copy":this.copyImage(a.oldX,a.oldY,a.x,a.y,a.width,a.height,!0);break;case"fill":this.fillRect(a.x,a.y,a.width,a.height,a.color,!0);break;case"blit":this.blitImage(a.x,a.y,a.width,a.height,a.data,0,!0);break;case"img":if(a.img.complete){if(a.img.width!==a.width||a.img.height!==a.height)return void Log.Error("Decoded image has incorrect dimensions. Got "+a.img.width+"x"+a.img.height+". Expected "+a.width+"x"+a.height+".");this.drawImage(a.img,a.x,a.y)}else a.img._noVNCDisplay=this,a.img.addEventListener("load",this._resumeRenderQ),ready=!1}ready&&this._renderQ.shift()}0===this._renderQ.length&&this._flushing&&(this._flushing=!1,this.onflush())}}