import*as Log from"../util/logging.min.js";import{stopEvent}from"../util/events.min.js";import*as KeyboardUtil from"./util.min.js";import KeyTable from"./keysym.min.js";import*as browser from"../util/browser.min.js";export default class Keyboard{constructor(target){this._target=target||null,this._keyDownList={},this._altGrArmed=!1,this._eventHandlers={keyup:this._handleKeyUp.bind(this),keydown:this._handleKeyDown.bind(this),blur:this._allKeysUp.bind(this)},this.onkeyevent=()=>{}}_sendKeyEvent(keysym,code,down){if(down)this._keyDownList[code]=keysym;else{if(!(code in this._keyDownList))return;delete this._keyDownList[code]}Log.Debug("onkeyevent "+(down?"down":"up")+", keysym: "+keysym,", code: "+code),this.onkeyevent(keysym,code,down)}_getKeyCode(e){const code=KeyboardUtil.getKeycode(e);if("Unidentified"!==code)return code;if(e.keyCode&&229!==e.keyCode)return"Platform"+e.keyCode;if(e.keyIdentifier){if("U+"!==e.keyIdentifier.substr(0,2))return e.keyIdentifier;const codepoint=parseInt(e.keyIdentifier.substr(2),16),char=String.fromCharCode(codepoint).toUpperCase();return"Platform"+char.charCodeAt()}return"Unidentified"}_handleKeyDown(e){const code=this._getKeyCode(e);let keysym=KeyboardUtil.getKeysym(e);if(this._altGrArmed&&(this._altGrArmed=!1,clearTimeout(this._altGrTimeout),"AltRight"===code&&e.timeStamp-this._altGrCtrlTime<50?keysym=KeyTable.XK_ISO_Level3_Shift:this._sendKeyEvent(KeyTable.XK_Control_L,"ControlLeft",!0)),"Unidentified"===code)return keysym&&(this._sendKeyEvent(keysym,code,!0),this._sendKeyEvent(keysym,code,!1)),void stopEvent(e);if(browser.isMac()||browser.isIOS())switch(keysym){case KeyTable.XK_Super_L:keysym=KeyTable.XK_Alt_L;break;case KeyTable.XK_Super_R:keysym=KeyTable.XK_Super_L;break;case KeyTable.XK_Alt_L:keysym=KeyTable.XK_Mode_switch;break;case KeyTable.XK_Alt_R:keysym=KeyTable.XK_ISO_Level3_Shift}if(code in this._keyDownList&&(keysym=this._keyDownList[code]),(browser.isMac()||browser.isIOS())&&e.metaKey&&"MetaLeft"!==code&&"MetaRight"!==code)return this._sendKeyEvent(keysym,code,!0),this._sendKeyEvent(keysym,code,!1),void stopEvent(e);if((browser.isMac()||browser.isIOS())&&"CapsLock"===code)return this._sendKeyEvent(KeyTable.XK_Caps_Lock,"CapsLock",!0),this._sendKeyEvent(KeyTable.XK_Caps_Lock,"CapsLock",!1),void stopEvent(e);const jpBadKeys=[KeyTable.XK_Zenkaku_Hankaku,KeyTable.XK_Eisu_toggle,KeyTable.XK_Katakana,KeyTable.XK_Hiragana,KeyTable.XK_Romaji];return browser.isWindows()&&jpBadKeys.includes(keysym)?(this._sendKeyEvent(keysym,code,!0),this._sendKeyEvent(keysym,code,!1),void stopEvent(e)):(stopEvent(e),"ControlLeft"!==code||!browser.isWindows()||"ControlLeft"in this._keyDownList?void this._sendKeyEvent(keysym,code,!0):(this._altGrArmed=!0,this._altGrTimeout=setTimeout(this._handleAltGrTimeout.bind(this),100),void(this._altGrCtrlTime=e.timeStamp)))}_handleKeyUp(e){stopEvent(e);const code=this._getKeyCode(e);if(this._altGrArmed&&(this._altGrArmed=!1,clearTimeout(this._altGrTimeout),this._sendKeyEvent(KeyTable.XK_Control_L,"ControlLeft",!0)),(browser.isMac()||browser.isIOS())&&"CapsLock"===code)return this._sendKeyEvent(KeyTable.XK_Caps_Lock,"CapsLock",!0),void this._sendKeyEvent(KeyTable.XK_Caps_Lock,"CapsLock",!1);this._sendKeyEvent(this._keyDownList[code],code,!1),!browser.isWindows()||"ShiftLeft"!==code&&"ShiftRight"!==code||("ShiftRight"in this._keyDownList&&this._sendKeyEvent(this._keyDownList.ShiftRight,"ShiftRight",!1),"ShiftLeft"in this._keyDownList&&this._sendKeyEvent(this._keyDownList.ShiftLeft,"ShiftLeft",!1))}_handleAltGrTimeout(){this._altGrArmed=!1,clearTimeout(this._altGrTimeout),this._sendKeyEvent(KeyTable.XK_Control_L,"ControlLeft",!0)}_allKeysUp(){Log.Debug(">> Keyboard.allKeysUp");for(let code in this._keyDownList)this._sendKeyEvent(this._keyDownList[code],code,!1);Log.Debug("<< Keyboard.allKeysUp")}grab(){this._target.addEventListener("keydown",this._eventHandlers.keydown),this._target.addEventListener("keyup",this._eventHandlers.keyup),window.addEventListener("blur",this._eventHandlers.blur)}ungrab(){this._target.removeEventListener("keydown",this._eventHandlers.keydown),this._target.removeEventListener("keyup",this._eventHandlers.keyup),window.removeEventListener("blur",this._eventHandlers.blur),this._allKeysUp()}}