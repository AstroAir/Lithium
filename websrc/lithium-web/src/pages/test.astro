<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>JSON解析器</title>
  <link rel="stylesheet" href="/css/adminlte.min.css">
  
</head>

<body>
  <div class="container mt-5">
    <h2>JSON解析器</h2>
    <hr>
    <div class="row">
      <div class="col-md-6 mb-3">
        <input type="file" id="jsonFileInput" accept=".json" style="display: none;">
        <button class="btn btn-primary mr-2" onclick="importJson()">导入JSON</button>
        <button class="btn btn-success" onclick="exportJson()">导出JSON</button>
      </div>
      <div class="col-md-6 mb-3">
        <input type="text" id="searchInput" class="form-control" placeholder="搜索...">
      </div>
    </div>
    <table class="table table-striped">
      <thead>
        <tr>
          <th scope="col" onclick="sortTable(0)">Category</th>
          <th scope="col" onclick="sortTable(1)">Key</th>
          <th scope="col" onclick="sortTable(2)">Value</th>
          <th scope="col">操作</th>
        </tr>
      </thead>
      <tbody id="jsonTable">
        <!-- JSON数据将在此动态填充 -->
      </tbody>
    </table>
    <nav id="paginationNav">
      <ul class="pagination justify-content-center">
        <!-- 分页链接将在此动态填充 -->
      </ul>
    </nav>
  </div>
  <script src="/js/jquery.min.js" is:inline></script>
  <script src="/js/bootstrap.bundle.min.js" is:inline></script>
  <script src="/js/adminlte.min.js" is:inline></script>
  <script>
    $(document).ready(function() {
      var jsonData = [
        { "category": "Profile", "key": "LGuider", "value": "1" },
        { "category": "1", "key": "/auto_exp/exposure_max", "value": "127.0.0.1" },
        { "category": "1", "key": "/auto_exp/exposure_min", "value": "1000" },
        { "category": "1", "key": "/auto_exp/target_snr", "value": "6" },
        { "category": "1", "key": "/CalStepCalc/GuideSpeed", "value": "0.5" }
        // 添加更多JSON数据
      ];
      var pageSize = 5;
      var currentPage = 1;
      var totalPages = Math.ceil(jsonData.length / pageSize);

      // 初始化表格
      function initTable(page) {
        $('#jsonTable').empty();
        var startIndex = (page - 1) * pageSize;
        var endIndex = startIndex + pageSize;
        var pageData = jsonData.slice(startIndex, endIndex);
        pageData.forEach(function(item, index) {
          var row = '<tr><td>' + item.category + '</td><td>' + item.key + '</td><td>' + item.value + '</td><td>' +
            '<button class="btn btn-primary btn-sm mr-2" onclick="editItem(' + startIndex + ',' + index + ')">编辑</button>' +
            '<button class="btn btn-danger btn-sm" onclick="deleteItem(' + startIndex + ',' + index + ')">删除</button>' +
            '</td></tr>';
          $('#jsonTable').append(row);
        });
      }

      // 初始化分页导航
      function initPagination() {
        $('#paginationNav').empty();
        var nav = '';
        for (var i = 1; i <= totalPages; i++) {
          nav += '<li class="page-item ' + (i === currentPage ? 'active' : '') +
            '"><a class="page-link" href="#" onclick="changePage(' + i + ')">' + i + '</a></li>';
        }
        $('#paginationNav').append(nav);
      }

      // 根据关键字过滤表格数据
      $('#searchInput').on('input', function() {
        var searchTerm = $(this).val().toLowerCase();
        var filteredData = jsonData.filter(function(item) {
          return item.category.toLowerCase().includes(searchTerm) || item.key.toLowerCase().includes(searchTerm) ||
            item.value.toLowerCase().includes(searchTerm);
        });
        totalPages = Math.ceil(filteredData.length / pageSize);
        currentPage = 1;
        initTable(currentPage);
        initPagination();
      });

      // 排序表格数据
      function sortTable(column) {
        jsonData.sort(function(a, b) {
          var valueA = a[Object.keys(a)[column]].toLowerCase();
          var valueB = b[Object.keys(b)[column]].toLowerCase();
          if (valueA < valueB) {
            return -1;
          }
          if (valueA > valueB) {
            return 1;
          }
          return 0;
        });
        initTable(currentPage);
      }

      // 切换页面
      function changePage(page) {
        currentPage = page;
        initTable(currentPage);
        initPagination();
      }

      // 导入JSON数据
      function importJson() {
        $('#jsonFileInput').click();
      }

      $('#jsonFileInput').on('change', function(e) {
        var file = e.target.files[0];
        var reader = new FileReader();
        reader.onload = function(e) {
          var importedData = JSON.parse(e.target.result);
          jsonData = importedData;
          totalPages = Math.ceil(jsonData.length / pageSize);
          currentPage = 1;
          initTable(currentPage);
          initPagination();
        };
        reader.readAsText(file);
      });

      // 导出JSON数据
      function exportJson() {
        var jsonStr = JSON.stringify(jsonData, null, 2);
        var blob = new Blob([jsonStr], { type: 'application/json' });
        var url = URL.createObjectURL(blob);
        var a = document.createElement('a');
        a.href = url;
        a.download = 'data.json';
        a.click();
      }

      // 编辑条目
      function editItem(startIndex, index) {
        var itemIndex = startIndex + index;
        var editedValue = prompt('请输入新的值', jsonData[itemIndex].value);
        if (editedValue !== null) {
          jsonData[itemIndex].value = editedValue;
          initTable(currentPage);
        }
      }

      // 删除条目
      function deleteItem(startIndex, index) {
        var itemIndex = startIndex + index;
        if (confirm('确定要删除此条目吗？')) {
          jsonData.splice(itemIndex, 1);
          totalPages = Math.ceil(jsonData.length / pageSize);
          initTable(currentPage);
          initPagination();
        }
      }

      // 初始填充表格和分页导航
      initTable(currentPage);
      initPagination();
    });
  </script>
</body>

</html>
